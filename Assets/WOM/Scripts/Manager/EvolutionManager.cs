using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;

/// <summary>
/// 진화 및 진화전 관리
/// </summary>

public class EvolutionManager : MonoBehaviour
{
    // current evolution grade id
    public int curEvolGradeDataId = 0;
    public int curEvolGradMonId = 0;
    public AnimationController animContTransition;
    public AnimData animDataTranIn;
    public AnimData animDataTranOut;


    //진화전 프로세스
    /*
     0 : 트랜지션 인
     1 : 몬스터 및 스테이지 세팅
     2 : 트랜지션 아웃
     3 : 진화전 몬스터 등장
     4 : 몬스터 사냥
     5 : 몬스터 사냥 성공 -> 진화
     6 : 몬스터 사냥 실패 -> 이전 몬스터 등장  
    */

    bool isEvolutionGamePlaying = false;

    void Start()
    {
        SetBtnEvents();
    }


    public IEnumerator Init()
    {
        yield return null;             
    }
    
    void SetBtnEvents()
    {
        // 진화전 버튼
        UtilityMethod.SetBtnEventCustomTypeByID(20, () => {
            if (isEvolutionGamePlaying == false)
                StartCoroutine(EvolutionUpgradeGameStart());
        });

    }

    IEnumerator EvolutionUpgradeGameStart()
    {
        isEvolutionGamePlaying = true;

        yield return null;

        // 트랜지션 인
        var image = UtilityMethod.GetCustomTypeImageById(20);
        var colorAlpha_None = new Color(1, 1, 1, 1);
        var colorAlpha = new Color(1, 1, 1, 0);
        animContTransition.animData = animDataTranIn;
        yield return StartCoroutine(animContTransition.UI_ImageColorAnim(image, colorAlpha ,colorAlpha_None));

        // UI PANEL 숨김
        GlobalData.instance.uiController.AllDisableMenuPanels();

        yield return new WaitForSeconds(1f);

        // 현재 몬스터 아웃


        // 데이터 세팅


        // 트랜지션 아웃
        animContTransition.animData = animDataTranOut;
        yield return StartCoroutine(animContTransition.UI_ImageColorAnim(image, colorAlpha_None, colorAlpha));

        // 몬스터 인
    }


}
